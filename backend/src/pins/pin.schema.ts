import { Tag } from '@/tags/tag.schema'
import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'
import mongoose, { HydratedDocument } from 'mongoose'

export type PinDocument = HydratedDocument<Pin>

@Schema({ timestamps: true })
export class Pin {
	@Prop({ required: true })
	user_id: string // the owner of the pin

	@Prop({ required: false, maxlength: 50, trim: true, default: '' })
	title: string // name of the pin

	@Prop({ required: true })
	url: string // URL of the image, generated by Cloudinary

	@Prop({ default: false })
	secret: boolean

	@Prop({ required: false, maxlength: 160, trim: true, default: '' })
	description: string

	@Prop({ required: true })
	isAllowedComment: boolean

	@Prop({ required: false, maxlength: 2048, trim: true, default: '' })
	referenceLink: string // the URL of the website where the pin was saved from

	@Prop({ default: 0 })
	saveCount: number // cached number of users who saved the pin

	@Prop({ default: 0 })
	likeCount: number // cached number of users who liked the pin

	@Prop({ default: 0 })
	commentCount: number // cached number of comments on the pin

    @Prop({ type: [String], ref: Tag.name, default: [] })
    tags: string[]
}

export const PinSchema = SchemaFactory.createForClass(Pin)

PinSchema.index({ user_id: 1 })